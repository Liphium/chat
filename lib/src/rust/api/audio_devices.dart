// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

/// Get all audio input devices on the system.
List<AudioInputDevice> getInputDevices() =>
    RustLib.instance.api.crateApiAudioDevicesGetInputDevices();

AudioInputDevice getDefaultInputDevice() =>
    RustLib.instance.api.crateApiAudioDevicesGetDefaultInputDevice();

Future<LightwireEngine> createLightwireEngine() =>
    RustLib.instance.api.crateApiAudioDevicesCreateLightwireEngine();

Stream<Uint8List> startPacketEngine({required LightwireEngine engine}) =>
    RustLib.instance.api.crateApiAudioDevicesStartPacketEngine(engine: engine);

Future<void> setVoiceEnabled(
        {required LightwireEngine engine, required bool enabled}) =>
    RustLib.instance.api
        .crateApiAudioDevicesSetVoiceEnabled(engine: engine, enabled: enabled);

class AudioInputDevice {
  final String name;
  final bool systemDefault;
  final int rating;

  const AudioInputDevice({
    required this.name,
    required this.systemDefault,
    required this.rating,
  });

  @override
  int get hashCode => name.hashCode ^ systemDefault.hashCode ^ rating.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is AudioInputDevice &&
          runtimeType == other.runtimeType &&
          name == other.name &&
          systemDefault == other.systemDefault &&
          rating == other.rating;
}

class LightwireEngine {
  final int id;

  const LightwireEngine({
    required this.id,
  });

  @override
  int get hashCode => id.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is LightwireEngine &&
          runtimeType == other.runtimeType &&
          id == other.id;
}
